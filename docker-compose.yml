version: '3'

services:

  nodejs-service:
    build: nodejs-service
    # env_file: nodejs-service/.env
    environment:
      JAEGER_SERVICE_NAME: nodejs-service
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: 1
      # by default, jaeger-client sends traces to an agent on localhost:6832
      # override and send traces to http://tracing-backend:6832
      JAEGER_AGENT_HOST: jaeger-agent
      JAEGER_AGENT_PORT: 6832
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "9229:9229" # nodejs debugging port
    # override the dockerfile startup command to:
    # 1) restart on file changes using nodemon
    # 2) start nodejs in debug mode and allow connections from all IPs
    # our healthcheck hack is to request the current sampling strategy.
    command: wait.sh http://jaeger-agent:5778?service 5 20 "nodemon --inspect=0.0.0.0 ."
    volumes:
      - ./nodejs-service/src:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - aparnet
    depends_on:
      - jaeger-agent
      - redis

  redis:
    image: redis:5.0-alpine
    ports:
      - "6379:6379"
    networks:
      - aparnet

  jaeger-agent:
    build: jaeger-agent
    environment:
      # more options: https://www.jaegertracing.io/docs/1.11/deployment/#all-options-1
      REPORTER_TYPE: grpc
      REPORTER_GRPC_HOST_PORT: jaeger-collector:14250
      PROCESSOR_JAEGER_BINARY_SERVER_HOST_PORT: :6832
    command: wait.sh http://jaeger-collector:14269 5 20 "jaeger-agent"
    ports:
      - "6832:6832" # receiving traces via UDP
      - "5778:5778" # get sampling strategies
    networks:
      - aparnet
    depends_on:
      - jaeger-collector

  jaeger-collector:
    build: jaeger-collector
    environment:
      # more options: https://www.jaegertracing.io/docs/1.11/deployment/#all-options-1
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    restart: on-failure
    # todo: eliminate duplication of health-check url in 'command'
    command: wait.sh http://elasticsearch:9200 5 20 "jaeger-collector"
    ports:
      - "14269:14269" # healthcheck
      - "14250:14250" # for receiving spans via grpc
    networks:
      - aparnet
    depends_on:
      - elasticsearch

  jaeger-query:
    build: jaeger-query
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    ports:
      - "16686:16686" # provides UI
      - "16687:16687" # healthcheck
    networks:
      - aparnet
    command: wait.sh http://elasticsearch:9200 5 20 "jaeger-query"
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:5.6-alpine
    ports:
      - "9200:9200" # server listens here
      - "9300:9300"
    networks:
      - aparnet

networks:
  aparnet: